name: Create Environment

permissions:
  id-token: write
  contents: read

on:
  create:
  pull_request:
    types: [opened, reopened]

concurrency: ${{ github.event.number || github.ref_name }}

jobs:
  config:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Get Configuration
    uses: ./.github/workflows/environment_config.yml

  create_env:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Create ${{ needs.config.outputs.type }} Environment
    runs-on: ubuntu-latest

    needs: config
    environment: ${{ needs.config.outputs.type }}

    env:
      ENVIRONMENT_NAME: ${{ needs.config.outputs.name }}
      ENVIRONMENT_TYPE: ${{ needs.config.outputs.type }}
      UNIQUE_SUFFIX: ${{ github.event.number || github.ref_name }}
      DATABASE_NAME: ribpay_${{ github.event.number || github.ref_name || 'prod' }}_db

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd src
          npm install
          npx prisma generate

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      # - name: Create PostgreSQL Database
      #   run: |
      #     az postgres db create --name ${{ env.DATABASE_NAME }} --server-name ${{ secrets.POSTGRES_SERVER_NAME }} --resource-group api-ribpay-demo
      #   env:
      #     POSTGRES_ADMIN_USER: ${{ secrets.POSTGRES_ADMIN_USER }}
      #     POSTGRES_ADMIN_PASSWORD: ${{ secrets.POSTGRES_ADMIN_PASSWORD }}
      #     POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}

      # - name: Set DATABASE_URL
      #   run: |
      #     echo "DATABASE_URL=postgresql://${{ secrets.POSTGRES_ADMIN_USER }}:${{ secrets.POSTGRES_ADMIN_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:5432/${{ env.DATABASE_NAME }}" >> $GITHUB_ENV

      - name: Build application
        run: |
          cd src
          npm run build

      - name: Run Prisma Migrations
        run: |
          cd src
          npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ vars.ACR_NAME }} --username ${{ secrets.AZURE_ACR_USERNAME }} --password ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push container image to registry
        run: |
          cd src
          echo "FROM node:18
          WORKDIR /app
          COPY package*.json ./
          RUN npm install
          COPY . .
          RUN npx prisma generate
          RUN npm run build
          EXPOSE 3000
          CMD [\"npm\", \"run\", \"start:prod\"]" > Dockerfile
          docker build --platform linux/amd64 -t ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }} .
          docker push ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }}

      - name: Transform type to lowercase
        id: lowercase_type
        uses: cloudposse/github-action-string-transformer@main
        with:
          operation: "lowercase"
          input-string: ${{ needs.config.outputs.type }}

      - name: Retrieve secrets from Azure Key Vault
        run: |
          echo "Retrieving secrets from Azure Key Vault"
          INPI_USERNAME=$(az keyvault secret show --name inpi-username --vault-name ribpayapi-keyvault --query value -o tsv)
          INPI_PASSWORD=$(az keyvault secret show --name inpi-password --vault-name ribpayapi-keyvault --query value -o tsv)
          OXLIN_CLIENT_ID=$(az keyvault secret show --name oxlin-client-id-dev --vault-name ribpayapi-keyvault --query value -o tsv)
          OXLIN_CLIENT_SECRET=$(az keyvault secret show --name oxlin-client-secret-dev --vault-name ribpayapi-keyvault --query value -o tsv)
          LAGO_API_KEY=$(az keyvault secret show --name lago-api-key-dev --vault-name ribpayapi-keyvault --query value -o tsv)
          AZURE_STORAGE_CONNECTION_STRING=$(az keyvault secret show --name azure-storage-connection-string --vault-name ribpayapi-keyvault --query value -o tsv)


          echo "INPI_USERNAME=$INPI_USERNAME" >> $GITHUB_ENV
          echo "INPI_PASSWORD=$INPI_PASSWORD" >> $GITHUB_ENV
          echo "OXLIN_CLIENT_ID=$OXLIN_CLIENT_ID" >> $GITHUB_ENV
          echo "OXLIN_CLIENT_SECRET=$OXLIN_CLIENT_SECRET" >> $GITHUB_ENV
          echo "LAGO_API_KEY=$LAGO_API_KEY" >> $GITHUB_ENV
          echo "AZURE_STORAGE_CONNECTION_STRING=$AZURE_STORAGE_CONNECTION_STRING" >> $GITHUB_ENV

      # - name: Create Container App Environment
      #   run: |
      #     az containerapp env create \
      #       --name ${{ needs.config.outputs.type }}-env-${{ env.UNIQUE_SUFFIX }} \
      #       --resource-group ${{ vars.AZURE_RESSOURCE_GROUP}} \
      #       --location westeurope

      - name: Deploy Container App
        run: |
          az containerapp create \
            --name ${{ steps.lowercase_type.outputs.output-string }}-${{ env.UNIQUE_SUFFIX }} \
            --resource-group ${{ vars.AZURE_RESSOURCE_GROUP }} \
            --environment pr-container-app-env \
            --image ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }} \
            --target-port 3000 \
            --ingress 'external' \
            --registry-server ${{ vars.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.AZURE_ACR_USERNAME }} \
            --registry-password ${{ secrets.AZURE_ACR_PASSWORD }} \
            --secrets "inpi-username=https://ribpayapi-keyvault.vault.azure.net/secrets/inpi-username/0963848b0b8b4467b16e42c543ffc38a" \
            --secrets "inpi-password=https://ribpayapi-keyvault.vault.azure.net/secrets/inpi-password" \
            --secrets "oxlin-client-id-dev=https://ribpayapi-keyvault.vault.azure.net/secrets/oxlin-client-id-dev" \
            --secrets "oxlin-client-secret-dev=https://ribpayapi-keyvault.vault.azure.net/secrets/oxlin-client-secret-dev" \
            --secrets "lago-api-key-dev=https://ribpayapi-keyvault.vault.azure.net/secrets/lago-api-key-dev" \
            --secrets "azure-storage-connection-string=https://ribpayapi-keyvault.vault.azure.net/secrets/azure-storage-connection-string" \
            --env-vars "DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}" \
                       "INPI_USERNAME=secretref:inpi-username" \
                       "INPI_PASSWORD=secretref:inpi-password" \
                       "OXLIN_CLIENT_ID=secretref:oxlin-client-id-dev" \
                       "OXLIN_CLIENT_SECRET=secretref:oxlin-client-secret-dev" \
                       "LAGO_API_KEY=secretref:lago-api-key-dev" \
                       "AZURE_STORAGE_CONNECTION_STRING=secretref:azure-storage-connection-string"

      - name: Output deployment information
        run: |
          echo "- [View the deployed API](https://${{ env.ENVIRONMENT_NAME }}.azurecontainerapps.io)" >> $GITHUB_STEP_SUMMARY
