name: Create Environment

permissions:
  id-token: write
  contents: read

on:
  create:
  pull_request:
    types: [opened, reopened]

concurrency: ${{ github.event.number || github.ref_name }}

jobs:
  config:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Get Configuration
    uses: ./.github/workflows/environment_config.yml

  create_env:
    if: github.event_name == 'pull_request' || github.event.ref_type == 'branch'
    name: Create ${{ needs.config.outputs.type }} Environment
    runs-on: ubuntu-latest

    needs: config
    environment: ${{ needs.config.outputs.type }}

    env:
      ENVIRONMENT_NAME: ${{ needs.config.outputs.name }}
      ENVIRONMENT_TYPE: ${{ needs.config.outputs.type }}
      UNIQUE_SUFFIX: ${{ github.event.number || github.ref_name }}
      DATABASE_NAME: ribpay_${{ github.event.number || github.ref_name || 'prod' }}_db

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: |
          cd src
          npm install
          npx prisma generate

      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Build application
        run: |
          cd src
          npm run build

      - name: Run Prisma Migrations
        run: |
          cd src
          npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}

      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ vars.ACR_NAME }} --username ${{ secrets.AZURE_ACR_USERNAME }} --password ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build and push container image to registry
        run: |
          cd src
          echo "FROM node:18
          WORKDIR /app
          COPY package*.json ./
          RUN npm install
          COPY . .
          RUN npx prisma generate
          RUN npm run build
          EXPOSE 3000
          CMD [\"npm\", \"run\", \"start:prod\"]" > Dockerfile
          docker build --platform linux/amd64 -t ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }} .
          docker push ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }}

      - name: Transform type to lowercase
        id: lowercase_type
        uses: cloudposse/github-action-string-transformer@main
        with:
          operation: "lowercase"
          input-string: ${{ needs.config.outputs.type }}

      - name: Deploy Container App
        run: |
          az containerapp create \
            --name ${{ steps.lowercase_type.outputs.output-string }}-${{ env.UNIQUE_SUFFIX }} \
            --resource-group ${{ vars.AZURE_RESSOURCE_GROUP }} \
            --environment pr-container-app-env \
            --image ${{ vars.ACR_NAME }}.azurecr.io/ribpay-nestjs-api:${{ needs.config.outputs.type }}-${{ env.UNIQUE_SUFFIX }} \
            --target-port 3000 \
            --ingress 'external' \
            --registry-server ${{ vars.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.AZURE_ACR_USERNAME }} \
            --registry-password ${{ secrets.AZURE_ACR_PASSWORD }} \
            --secrets "inpi-username=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/inpi-username,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
                      "inpi-password=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/inpi-password,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
                      "oxlin-client-id-dev=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/oxlin-client-id-dev,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
                      "oxlin-client-secret-dev=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/oxlin-client-secret-dev,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
                      "lago-api-key-dev=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/lago-api-key-dev,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
                      "azure-storage-connection-string=keyvaultref:https://ribpayapi-keyvault.vault.azure.net/secrets/azure-storage-connection-string,identityref:d6c577d3-45da-462a-801c-202c9bd1d29f" \
            --env-vars "DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}" \
                       "INPI_USERNAME=secretref:inpi-username" \
                       "INPI_PASSWORD=secretref:inpi-password" \
                       "OXLIN_CLIENT_ID=secretref:oxlin-client-id-dev" \
                       "OXLIN_CLIENT_SECRET=secretref:oxlin-client-secret-dev" \
                       "LAGO_API_KEY=secretref:lago-api-key-dev" \
                       "AZURE_STORAGE_CONNECTION_STRING=secretref:azure-storage-connection-string"

      - name: Output deployment information
        run: |
          echo "- [View the deployed API](https://${{ env.ENVIRONMENT_NAME }}.azurecontainerapps.io)" >> $GITHUB_STEP_SUMMARY
